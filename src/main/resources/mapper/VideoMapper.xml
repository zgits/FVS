<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.four.fvs.dao.VideoDao">

    <resultMap id="video" type="com.four.fvs.model.Video">
        <result property="id" column="id"></result>
        <result property="name" column="name"></result>
        <result property="typeId" column="typeId"></result>
        <result property="userId" column="userId"></result>
        <result property="upTime" column="upTime"></result>
        <result property="vv" column="vv"></result>
        <result property="collectNumber" column="collectNumber"></result>
        <result property="shareNumber" column="shareNumber"></result>
        <result property="praiseNumber" column="praiseNumber"></result>
        <result property="videoSrc" column="videoSrc"></result>
        <result property="simpleIntroduce" column="simpleIntroduce"></result>
        <result property="status" column="status"></result>
        <result property="firstImagePath" column="firstImagePath"></result>
        <result property="del" column="del"></result>
        <result property="videoLength" column="videoLength"></result>
        <collection property="bulletScreenList" ofType="com.four.fvs.model.BulletScreen" columnPrefix="b_">
            <result property="id" column="id"></result>
            <result property="color" column="color"></result>
            <result property="position" column="position"></result>
            <result property="size" column="size"></result>
            <result property="text" column="text"></result>
            <result property="time" column="time"></result>
            <result property="bulletTime" column="bulletTime"></result>
            <result property="videoId" column="videoId"></result>
            <result property="type" column="type"></result>
            <result property="del" column="del"></result>
        </collection>
    </resultMap>

    <sql id="otherbase_sql">
        b.id b_id,
        b.color b_color,
        b.position b_position,
        b.size b_size,
        b.text b_text,
        b.time b_time,
        b.bulletTime b_bulletTime,
        b.videoId b_videoId,
        b.type b_type,
        b.del b_del,
    </sql>


    <insert id="addVideoPlayList" parameterType="com.four.fvs.model.VideoPlayList">
        insert into video_play_list (video_id, watch_time)
        values (#{videoId} ,#{watchTime} )
    </insert>



    <select id="getOneVideoById" resultMap="video">
        select
        a.*,
        <trim suffixOverrides=",">
            <include refid="otherbase_sql"></include>
        </trim>
        from
        (
        select *
        from video where id=#{id} and del=1 and status=2
        ) a
        left JOIN bulletscreen b on a.id=b.videoId and b.type=1 and b.del=1
    </select>
    <!--获取某分区昨天到今天更新条数-->
    <select id="getUpdateCount" resultType="integer">
        SELECT count(*) FROm video
        WHERE TO_DAYS(NOW())-TO_DAYS(upTime)&lt;=1 and typeId=#{typeId} and del=1;

    </select>
    <!--首页获取-->
    <select id="getAllVideo" resultType="com.four.fvs.model.Video" >
        select id,vv,name,typeId,firstImagepath,videoSrc,videoLength,upTime
        from video
        where del=1
        ORDER BY upTime desc
    </select>

    <!--排行榜-->
    <select id="getVideoRank" resultType="com.four.fvs.model.Video">
        select id,typeId,vv,name,upTime
        from video
        where del=1 and typeId=#{typeId}
        order by vv desc
    </select>
    <!--获取各分区视频数量-->
    <select id="getVideoCountByType" resultType="integer">
        select count(*) from video
        where del=1 and typeId=#{typeId}
    </select>

    <!--分页获取分区的视频信息-->
    <select id="getVideoByType" resultType="com.four.fvs.model.Video">
        select id,vv,name,firstImagepath,videoSrc,videoLength,upTime,typeId
        from video
        where del=1 and typeId=#{typeId}
        ORDER BY upTime desc
        limit #{begin},#{size}
    </select>
    <select id="getVideoByType1" resultType="com.four.fvs.model.Video">
        select id,vv,name,firstImagepath,videoSrc,videoLength,upTime,typeId
        from video
        where del=1 and typeId=#{typeId}
        ORDER BY upTime desc
    </select>


    <!--根据名字模糊搜索视频-->
    <select id="getVideoByName" resultType="com.four.fvs.model.Video">
        <bind name="videoname" value="'%'+name+'%'"/>
        select id,vv,name,firstImagepath,videoSrc,videoLength,upTime,typeId
        from video
        where name like #{videoname} and del=1
        order by (vv)desc
        limit #{begin},#{size}
    </select>

    <select id="getVideoByName1" resultType="com.four.fvs.model.Video">
        <bind name="videoname" value="'%'+name+'%'"/>
        select id,vv,name,firstImagepath,videoSrc,videoLength,upTime,typeId
        from video
        where name like #{videoname} and del=1
        order by (vv)desc
    </select>

    <!--根据名字模糊搜索用户-->
    <select id="getUserByName" resultType="com.four.fvs.model.User">
        <bind name="username" value="'%'+name+'%'"/>
        select *
        from user
        where userName like #{username} and del=1
        ORDER BY LENGTH(userName)
        limit #{begin},#{size}
    </select>

    <select id="getUserByName1" resultType="com.four.fvs.model.User">
        <bind name="username" value="'%'+name+'%'"/>
        select *
        from user
        where userName like #{username} and del=1
        ORDER BY LENGTH(userName)
    </select>


    <update id="updateVideovv">
        update video set vv=vv+1 where id=#{id}
    </update>


    <update id="givePraise">
        update video
        set praiseNumber=praiseNumber+#{number}
        where id=#{id}

    </update>

    <update id="giveCollection">
        update video
        set collectNumber=collectNumber+#{number}
        where id=#{id}

    </update>

    <update id="giveShare">
        update video
        set shareNumber=shareNumber+1
        where id=#{id}
    </update>


    <select id="getTheSameVideo" resultType="com.four.fvs.model.Video">
        select * from video
        where (typeId=#{type} or userId=#{userId}) and del =1 and status=2
    </select>
    <!--
     * 通过id得到某个用户的投稿视频
     * @param id
     * @return
      -->
    <select id="getCollectVideo" resultType="com.four.fvs.model.Video">
        select * from video where userId =#{id} and del=1

    </select>
    <!--
     * 通过id得到某个用户的收藏视频
     * @param id
     * @return
      -->
    <select id="getShoucangVideo" resultType="com.four.fvs.model.Video">

        select * from video where id in (select id from collectvideo where collectUserid =#{id} and del =1 )
    </select>
</mapper>